[package]
name = "leptos_playground"
version = "0.1.0"
edition = "2021"

[lib]
crate-type = ["cdylib", "rlib"]


[dependencies]
leptos = { version = "0.1", default-features = false }
console_log = "0.2"
log = "0.4"
console_error_panic_hook = "0.1"
console = "0.15.3"
leptos_router = { version = "0.1", default-features = false }
leptos_meta = { version = "0.1", default-features = false }
axum = { version = "0.6.3", optional = true }
leptos_axum = { version = "0.1.1", optional = true }
#http = { version = "0.2.8", optional = true }
http = { version = "0.2.8" }
tower = { version = "0.4.13", optional = true }
tower-http = { version = "0.3.5", optional = true, features = ["fs"] }
tokio = { version = "1.24.2", optional = true }
cfg-if = "1.0.0"
simple_logger = "4.0.0"
serde = { version = "1.0.152", features = ["derive"] }
serde_json = "1.0.91"
wasm-bindgen = "0.2"
sqlx = { version = "0.6.2", features = ["sqlite", "runtime-tokio-rustls"], optional = true }
futures = "0.3.25"
reqwest = { version = "0.11.14", features = ["json"] }
gloo-net = { version = "0.2.6", features = ["http"] }

[features]
default = ["csr"]
csr = ["leptos/csr", "leptos_meta/csr", "leptos_router/csr"]
hydrate = ["leptos/hydrate", "leptos_meta/hydrate", "leptos_router/hydrate"]
#ssr = ["dep:axum", "dep:tower", "dep:tower-http", "dep:tokio", "dep:http", "dep:sqlx", "leptos/ssr", "leptos_meta/ssr", "leptos_router/ssr", "leptos_axum"]
ssr = ["dep:axum", "dep:tower", "dep:tower-http", "dep:tokio", "dep:sqlx", "leptos/ssr", "leptos_meta/ssr", "leptos_router/ssr", "leptos_axum"]

[package.metadata.cargo-all-features]
denylist = ["axum", "tower", "tower-http", "tokio", "htpp", "leptos_axum"]
skip_feature_sets = [["csr", "ssr"], ["csr", "hydrate"], ["ssr", "hydrate"]]

[package.metadata.leptos]
# The name used by wasm-bindgen/cargo-leptos for the JS/WASM bundle. Defaults to the crate name
output-name = "leptos_playground"
# The site root folder is where cargo-leptos generate all output. WARNING: all content of this folder will be erased on a rebuild. Use it in your server setup.
site-root = "target/site"
# The site-root relative folder where all compiled output (JS, WASM and CSS) is written
# Defaults to pkg
site-pkg-dir = "pkg"
# [Optional] The source CSS file. If it ends with .sass or .scss then it will be compiled by dart-sass into CSS. The CSS is optimized by Lightning CSS before being written to <site-root>/<site-pkg>/app.css
style-file = "src/style/style.scss"
# [Optional] Files in the asset-dir will be copied to the site-root directory
assets-dir = "public"
# The IP and port (ex: 127.0.0.1:3000) where the server serves the content. Use it in your server setup.
site-address = "127.0.0.1:3000"
# The port to use for automatic reload monitoring
reload-port = 3001
# [Optional] Command to use when running end2end tests. It will run in the end2end dir.
end2end-cmd = "npx playwright test"
#  The browserlist query used for optimizing the CSS.
browserquery = "defaults"
# Set by cargo-leptos watch when building with tha tool. Controls whether autoreload JS will be included in the head
watch = true
# The environment Leptos will run in, usually either "DEV" or "PROD"
env = "DEV"
# The features to use when compiling the bin target
#
# Optional. Can be over-ridden with the command line parameter --bin-features
bin-features = ["ssr"]

# If the --no-default-features flag should be used when compiling the bin target
#
# Optional. Defaults to false.
bin-default-features = false

# The features to use when compiling the lib target
#
# Optional. Can be over-ridden with the command line parameter --lib-features
lib-features = ["hydrate"]

# If the --no-default-features flag should be used when compiling the lib target
#
# Optional. Defaults to false.
lib-default-features = false
